name: Backend CI

on:
  push:
    branches:
      - main  # Trigger CI on pushes to the main branch

jobs:
  test:
    name: Run Tests
    runs-on: self-hosted  # Ensure runner label matches your setup

    strategy:
      matrix:
        node-version: [22]

    steps:
    # Checkout code
    - name: Checkout Code
      uses: actions/checkout@v3

    # Set up Node.js
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    # Print secrets for debugging
    - name: Print Env Secret
      env:
        MONGO_URI: ${{ secrets.MONGO_URI }}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
        PORT: ${{ secrets.PORT }}
      run: | 
        echo "Secret 1 is: $MONGO_URI"
        echo "Secret 2 is: $JWT_SECRET"
        echo "Secret 3 is: $PORT"

    # Install backend dependencies
    - name: Install Backend Dependencies
      working-directory: ./backend
      run: |
        npm install --global yarn
        yarn install

    # Create .env file in backend
    - name: Setup Backend Environment
      working-directory: ./backend
      run: |
        touch .env
        echo "MONGO_URI=${{ secrets.MONGO_URI }}" >> .env
        echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
        echo "PORT=${{ secrets.PORT }}" >> .env

    # Run backend tests
    - name: Run Backend Tests
      working-directory: ./backend
      run: yarn test

    # Install frontend dependencies and build
    - name: Install Frontend Dependencies
      working-directory: ./frontend
      run: |
        yarn install
        yarn build

    # Manage PM2 services
    - name: Restart PM2 Services
      run: |
        pm2 stop all
        pm2 start all
        pm2 restart all